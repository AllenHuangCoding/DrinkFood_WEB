/* tslint:disable */
/* eslint-disable */
/**
 * 訂餐系統
 * 系統API規格說明
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BigInteger
 */
export interface BigInteger {
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    readonly BitCount?: number;
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    readonly BitLength?: number;
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    readonly IntValue?: number;
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    readonly IntValueExact?: number;
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    readonly LongValue?: number;
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    readonly LongValueExact?: number;
    /**
     * 
     * @type {number}
     * @memberof BigInteger
     */
    readonly SignValue?: number;
}

/**
 * Check if a given object implements the BigInteger interface.
 */
export function instanceOfBigInteger(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BigIntegerFromJSON(json: any): BigInteger {
    return BigIntegerFromJSONTyped(json, false);
}

export function BigIntegerFromJSONTyped(json: any, ignoreDiscriminator: boolean): BigInteger {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'BitCount': !exists(json, 'BitCount') ? undefined : json['BitCount'],
        'BitLength': !exists(json, 'BitLength') ? undefined : json['BitLength'],
        'IntValue': !exists(json, 'IntValue') ? undefined : json['IntValue'],
        'IntValueExact': !exists(json, 'IntValueExact') ? undefined : json['IntValueExact'],
        'LongValue': !exists(json, 'LongValue') ? undefined : json['LongValue'],
        'LongValueExact': !exists(json, 'LongValueExact') ? undefined : json['LongValueExact'],
        'SignValue': !exists(json, 'SignValue') ? undefined : json['SignValue'],
    };
}

export function BigIntegerToJSON(value?: BigInteger | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

