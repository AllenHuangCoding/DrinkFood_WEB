/* tslint:disable */
/* eslint-disable */
/**
 * 訂餐系統
 * 系統API規格說明
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ViewMenu
 */
export interface ViewMenu {
    /**
     * 
     * @type {string}
     * @memberof ViewMenu
     */
    MenuID: string;
    /**
     * 
     * @type {string}
     * @memberof ViewMenu
     */
    MenuAreaID?: string;
    /**
     * 
     * @type {string}
     * @memberof ViewMenu
     */
    MenuAreaDesc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewMenu
     */
    BrandID?: string;
    /**
     * 
     * @type {string}
     * @memberof ViewMenu
     */
    BrandName?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ViewMenu
     */
    MenuCreate?: Date;
}

/**
 * Check if a given object implements the ViewMenu interface.
 */
export function instanceOfViewMenu(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "MenuID" in value;

    return isInstance;
}

export function ViewMenuFromJSON(json: any): ViewMenu {
    return ViewMenuFromJSONTyped(json, false);
}

export function ViewMenuFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewMenu {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'MenuID': json['MenuID'],
        'MenuAreaID': !exists(json, 'MenuAreaID') ? undefined : json['MenuAreaID'],
        'MenuAreaDesc': !exists(json, 'MenuAreaDesc') ? undefined : json['MenuAreaDesc'],
        'BrandID': !exists(json, 'BrandID') ? undefined : json['BrandID'],
        'BrandName': !exists(json, 'BrandName') ? undefined : json['BrandName'],
        'MenuCreate': !exists(json, 'MenuCreate') ? undefined : (new Date(json['MenuCreate'])),
    };
}

export function ViewMenuToJSON(value?: ViewMenu | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'MenuID': value.MenuID,
        'MenuAreaID': value.MenuAreaID,
        'MenuAreaDesc': value.MenuAreaDesc,
        'BrandID': value.BrandID,
        'BrandName': value.BrandName,
        'MenuCreate': value.MenuCreate === undefined ? undefined : (value.MenuCreate.toISOString()),
    };
}

