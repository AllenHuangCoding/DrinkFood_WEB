/* tslint:disable */
/* eslint-disable */
/**
 * DrinkFood_API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ViewOrderDetail
 */
export interface ViewOrderDetail {
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    OrderDetailID?: string;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    OrderID?: string;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    DrinkFoodID?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    DrinkFoodName?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ViewOrderDetail
     */
    DrinkFoodPrice?: number;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    DrinkFoodRemark?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    SugarID?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    SugarDesc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    IceID?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    IceDesc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    SizeID?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    SizeDesc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    AccountID?: string;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    Name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    Brief?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    Email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    PaymentID?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    PaymentDesc?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ViewOrderDetail
     */
    PaymentDatetime?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof ViewOrderDetail
     */
    PaymentArrived?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof ViewOrderDetail
     */
    Quantity?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof ViewOrderDetail
     */
    IsPickup?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof ViewOrderDetail
     */
    DetailRemark?: string | null;
}

/**
 * Check if a given object implements the ViewOrderDetail interface.
 */
export function instanceOfViewOrderDetail(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ViewOrderDetailFromJSON(json: any): ViewOrderDetail {
    return ViewOrderDetailFromJSONTyped(json, false);
}

export function ViewOrderDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewOrderDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'OrderDetailID': !exists(json, 'OrderDetailID') ? undefined : json['OrderDetailID'],
        'OrderID': !exists(json, 'OrderID') ? undefined : json['OrderID'],
        'DrinkFoodID': !exists(json, 'DrinkFoodID') ? undefined : json['DrinkFoodID'],
        'DrinkFoodName': !exists(json, 'DrinkFoodName') ? undefined : json['DrinkFoodName'],
        'DrinkFoodPrice': !exists(json, 'DrinkFoodPrice') ? undefined : json['DrinkFoodPrice'],
        'DrinkFoodRemark': !exists(json, 'DrinkFoodRemark') ? undefined : json['DrinkFoodRemark'],
        'SugarID': !exists(json, 'SugarID') ? undefined : json['SugarID'],
        'SugarDesc': !exists(json, 'SugarDesc') ? undefined : json['SugarDesc'],
        'IceID': !exists(json, 'IceID') ? undefined : json['IceID'],
        'IceDesc': !exists(json, 'IceDesc') ? undefined : json['IceDesc'],
        'SizeID': !exists(json, 'SizeID') ? undefined : json['SizeID'],
        'SizeDesc': !exists(json, 'SizeDesc') ? undefined : json['SizeDesc'],
        'AccountID': !exists(json, 'AccountID') ? undefined : json['AccountID'],
        'Name': !exists(json, 'Name') ? undefined : json['Name'],
        'Brief': !exists(json, 'Brief') ? undefined : json['Brief'],
        'Email': !exists(json, 'Email') ? undefined : json['Email'],
        'PaymentID': !exists(json, 'PaymentID') ? undefined : json['PaymentID'],
        'PaymentDesc': !exists(json, 'PaymentDesc') ? undefined : json['PaymentDesc'],
        'PaymentDatetime': !exists(json, 'PaymentDatetime') ? undefined : (json['PaymentDatetime'] === null ? null : new Date(json['PaymentDatetime'])),
        'PaymentArrived': !exists(json, 'PaymentArrived') ? undefined : json['PaymentArrived'],
        'Quantity': !exists(json, 'Quantity') ? undefined : json['Quantity'],
        'IsPickup': !exists(json, 'IsPickup') ? undefined : json['IsPickup'],
        'DetailRemark': !exists(json, 'DetailRemark') ? undefined : json['DetailRemark'],
    };
}

export function ViewOrderDetailToJSON(value?: ViewOrderDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'OrderDetailID': value.OrderDetailID,
        'OrderID': value.OrderID,
        'DrinkFoodID': value.DrinkFoodID,
        'DrinkFoodName': value.DrinkFoodName,
        'DrinkFoodPrice': value.DrinkFoodPrice,
        'DrinkFoodRemark': value.DrinkFoodRemark,
        'SugarID': value.SugarID,
        'SugarDesc': value.SugarDesc,
        'IceID': value.IceID,
        'IceDesc': value.IceDesc,
        'SizeID': value.SizeID,
        'SizeDesc': value.SizeDesc,
        'AccountID': value.AccountID,
        'Name': value.Name,
        'Brief': value.Brief,
        'Email': value.Email,
        'PaymentID': value.PaymentID,
        'PaymentDesc': value.PaymentDesc,
        'PaymentDatetime': value.PaymentDatetime === undefined ? undefined : (value.PaymentDatetime === null ? null : value.PaymentDatetime.toISOString()),
        'PaymentArrived': value.PaymentArrived,
        'Quantity': value.Quantity,
        'IsPickup': value.IsPickup,
        'DetailRemark': value.DetailRemark,
    };
}

