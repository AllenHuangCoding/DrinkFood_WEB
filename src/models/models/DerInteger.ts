/* tslint:disable */
/* eslint-disable */
/**
 * 訂餐系統
 * 系統API規格說明
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BigInteger } from './BigInteger';
import {
    BigIntegerFromJSON,
    BigIntegerFromJSONTyped,
    BigIntegerToJSON,
} from './BigInteger';

/**
 * 
 * @export
 * @interface DerInteger
 */
export interface DerInteger {
    /**
     * 
     * @type {BigInteger}
     * @memberof DerInteger
     */
    PositiveValue?: BigInteger;
    /**
     * 
     * @type {BigInteger}
     * @memberof DerInteger
     */
    Value?: BigInteger;
    /**
     * 
     * @type {number}
     * @memberof DerInteger
     */
    readonly IntPositiveValueExact?: number;
    /**
     * 
     * @type {number}
     * @memberof DerInteger
     */
    readonly IntValueExact?: number;
    /**
     * 
     * @type {number}
     * @memberof DerInteger
     */
    readonly LongValueExact?: number;
}

/**
 * Check if a given object implements the DerInteger interface.
 */
export function instanceOfDerInteger(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DerIntegerFromJSON(json: any): DerInteger {
    return DerIntegerFromJSONTyped(json, false);
}

export function DerIntegerFromJSONTyped(json: any, ignoreDiscriminator: boolean): DerInteger {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'PositiveValue': !exists(json, 'PositiveValue') ? undefined : BigIntegerFromJSON(json['PositiveValue']),
        'Value': !exists(json, 'Value') ? undefined : BigIntegerFromJSON(json['Value']),
        'IntPositiveValueExact': !exists(json, 'IntPositiveValueExact') ? undefined : json['IntPositiveValueExact'],
        'IntValueExact': !exists(json, 'IntValueExact') ? undefined : json['IntValueExact'],
        'LongValueExact': !exists(json, 'LongValueExact') ? undefined : json['LongValueExact'],
    };
}

export function DerIntegerToJSON(value?: DerInteger | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'PositiveValue': BigIntegerToJSON(value.PositiveValue),
        'Value': BigIntegerToJSON(value.Value),
    };
}

