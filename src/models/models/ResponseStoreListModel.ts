/* tslint:disable */
/* eslint-disable */
/**
 * 訂餐系統
 * 系統API規格說明
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResponseStoreListModel
 */
export interface ResponseStoreListModel {
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    BrandID?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    BrandName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    BrandLogoUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    BrandOfficialUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    BrandTypeDesc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    StoreID?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    StoreMenuAreaID?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    StoreName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    StoreAddress?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    StorePhone?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    StoreRemark?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    BrandStoreName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    PreviousOrderDate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ResponseStoreListModel
     */
    LineID?: string | null;
}

/**
 * Check if a given object implements the ResponseStoreListModel interface.
 */
export function instanceOfResponseStoreListModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResponseStoreListModelFromJSON(json: any): ResponseStoreListModel {
    return ResponseStoreListModelFromJSONTyped(json, false);
}

export function ResponseStoreListModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseStoreListModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'BrandID': !exists(json, 'BrandID') ? undefined : json['BrandID'],
        'BrandName': !exists(json, 'BrandName') ? undefined : json['BrandName'],
        'BrandLogoUrl': !exists(json, 'BrandLogoUrl') ? undefined : json['BrandLogoUrl'],
        'BrandOfficialUrl': !exists(json, 'BrandOfficialUrl') ? undefined : json['BrandOfficialUrl'],
        'BrandTypeDesc': !exists(json, 'BrandTypeDesc') ? undefined : json['BrandTypeDesc'],
        'StoreID': !exists(json, 'StoreID') ? undefined : json['StoreID'],
        'StoreMenuAreaID': !exists(json, 'StoreMenuAreaID') ? undefined : json['StoreMenuAreaID'],
        'StoreName': !exists(json, 'StoreName') ? undefined : json['StoreName'],
        'StoreAddress': !exists(json, 'StoreAddress') ? undefined : json['StoreAddress'],
        'StorePhone': !exists(json, 'StorePhone') ? undefined : json['StorePhone'],
        'StoreRemark': !exists(json, 'StoreRemark') ? undefined : json['StoreRemark'],
        'BrandStoreName': !exists(json, 'BrandStoreName') ? undefined : json['BrandStoreName'],
        'PreviousOrderDate': !exists(json, 'PreviousOrderDate') ? undefined : json['PreviousOrderDate'],
        'LineID': !exists(json, 'LineID') ? undefined : json['LineID'],
    };
}

export function ResponseStoreListModelToJSON(value?: ResponseStoreListModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BrandID': value.BrandID,
        'BrandName': value.BrandName,
        'BrandLogoUrl': value.BrandLogoUrl,
        'BrandOfficialUrl': value.BrandOfficialUrl,
        'BrandTypeDesc': value.BrandTypeDesc,
        'StoreID': value.StoreID,
        'StoreMenuAreaID': value.StoreMenuAreaID,
        'StoreName': value.StoreName,
        'StoreAddress': value.StoreAddress,
        'StorePhone': value.StorePhone,
        'StoreRemark': value.StoreRemark,
        'BrandStoreName': value.BrandStoreName,
        'PreviousOrderDate': value.PreviousOrderDate,
        'LineID': value.LineID,
    };
}

