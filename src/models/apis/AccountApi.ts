/* tslint:disable */
/* eslint-disable */
/**
 * DrinkFood_API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RequestCreateAccountModel,
  RequestUpdateProfileModel,
  ResponseModel,
  ViewAccount,
} from '../models/index';
import {
    RequestCreateAccountModelFromJSON,
    RequestCreateAccountModelToJSON,
    RequestUpdateProfileModelFromJSON,
    RequestUpdateProfileModelToJSON,
    ResponseModelFromJSON,
    ResponseModelToJSON,
    ViewAccountFromJSON,
    ViewAccountToJSON,
} from '../models/index';

export interface ApiAccountCreateAccountPostRequest {
    requestCreateAccountModel?: RequestCreateAccountModel;
}

export interface ApiAccountLoginGetRequest {
    number?: string;
    password?: string;
}

export interface ApiAccountUpdateProfileAccountIDPutRequest {
    accountID: string;
    requestUpdateProfileModel?: RequestUpdateProfileModel;
}

/**
 * 
 */
export class AccountApi extends runtime.BaseAPI {

    /**
     */
    async apiAccountCreateAccountPostRaw(requestParameters: ApiAccountCreateAccountPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Account/CreateAccount`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RequestCreateAccountModelToJSON(requestParameters.requestCreateAccountModel),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiAccountCreateAccountPost(requestParameters: ApiAccountCreateAccountPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseModel> {
        const response = await this.apiAccountCreateAccountPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiAccountGetAccountListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ViewAccount>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Account/GetAccountList`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ViewAccountFromJSON));
    }

    /**
     */
    async apiAccountGetAccountListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ViewAccount>> {
        const response = await this.apiAccountGetAccountListGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiAccountLoginGetRaw(requestParameters: ApiAccountLoginGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters.number !== undefined) {
            queryParameters['Number'] = requestParameters.number;
        }

        if (requestParameters.password !== undefined) {
            queryParameters['Password'] = requestParameters.password;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Account/Login`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiAccountLoginGet(requestParameters: ApiAccountLoginGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseModel> {
        const response = await this.apiAccountLoginGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiAccountUpdateProfileAccountIDPutRaw(requestParameters: ApiAccountUpdateProfileAccountIDPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseModel>> {
        if (requestParameters.accountID === null || requestParameters.accountID === undefined) {
            throw new runtime.RequiredError('accountID','Required parameter requestParameters.accountID was null or undefined when calling apiAccountUpdateProfileAccountIDPut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Account/UpdateProfile/{AccountID}`.replace(`{${"AccountID"}}`, encodeURIComponent(String(requestParameters.accountID))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: RequestUpdateProfileModelToJSON(requestParameters.requestUpdateProfileModel),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiAccountUpdateProfileAccountIDPut(requestParameters: ApiAccountUpdateProfileAccountIDPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseModel> {
        const response = await this.apiAccountUpdateProfileAccountIDPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
