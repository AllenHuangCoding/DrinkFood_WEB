/* tslint:disable */
/* eslint-disable */
/**
 * 訂餐系統
 * 系統API規格說明
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RequestCreateAccountModel,
  RequestUpdateProfileModel,
  ResponseModel,
  ResponseProfileDialogOptions,
  ViewAccount,
} from '../models/index';
import {
    RequestCreateAccountModelFromJSON,
    RequestCreateAccountModelToJSON,
    RequestUpdateProfileModelFromJSON,
    RequestUpdateProfileModelToJSON,
    ResponseModelFromJSON,
    ResponseModelToJSON,
    ResponseProfileDialogOptionsFromJSON,
    ResponseProfileDialogOptionsToJSON,
    ViewAccountFromJSON,
    ViewAccountToJSON,
} from '../models/index';

export interface ApiAccountCreateAccountPostRequest {
    requestCreateAccountModel?: RequestCreateAccountModel;
}

export interface ApiAccountUpdateProfileAccountIDPutRequest {
    accountID: string;
    requestUpdateProfileModel?: RequestUpdateProfileModel;
}

/**
 * 
 */
export class AccountApi extends runtime.BaseAPI {

    /**
     */
    async apiAccountCreateAccountPostRaw(requestParameters: ApiAccountCreateAccountPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Account/CreateAccount`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RequestCreateAccountModelToJSON(requestParameters.requestCreateAccountModel),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiAccountCreateAccountPost(requestParameters: ApiAccountCreateAccountPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseModel> {
        const response = await this.apiAccountCreateAccountPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiAccountGetAccountListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ViewAccount>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Account/GetAccountList`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ViewAccountFromJSON));
    }

    /**
     */
    async apiAccountGetAccountListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ViewAccount>> {
        const response = await this.apiAccountGetAccountListGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiAccountGetProfileDialogOptionsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseProfileDialogOptions>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Account/GetProfileDialogOptions`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseProfileDialogOptionsFromJSON(jsonValue));
    }

    /**
     */
    async apiAccountGetProfileDialogOptionsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseProfileDialogOptions> {
        const response = await this.apiAccountGetProfileDialogOptionsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiAccountGetProfileGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ViewAccount>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Account/GetProfile`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ViewAccountFromJSON(jsonValue));
    }

    /**
     */
    async apiAccountGetProfileGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ViewAccount> {
        const response = await this.apiAccountGetProfileGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiAccountUpdateProfileAccountIDPutRaw(requestParameters: ApiAccountUpdateProfileAccountIDPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseModel>> {
        if (requestParameters.accountID === null || requestParameters.accountID === undefined) {
            throw new runtime.RequiredError('accountID','Required parameter requestParameters.accountID was null or undefined when calling apiAccountUpdateProfileAccountIDPut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Account/UpdateProfile/{AccountID}`.replace(`{${"AccountID"}}`, encodeURIComponent(String(requestParameters.accountID))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: RequestUpdateProfileModelToJSON(requestParameters.requestUpdateProfileModel),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiAccountUpdateProfileAccountIDPut(requestParameters: ApiAccountUpdateProfileAccountIDPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseModel> {
        const response = await this.apiAccountUpdateProfileAccountIDPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
